{"ast":null,"code":"var _jsxFileName = \"D:\\\\pokemon-mern-app\\\\client\\\\src\\\\components\\\\DailyPokemonCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DailyPokemonCard = () => {\n  _s();\n  var _pokemon$sprites;\n  const [pokemon, setPokemon] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDailyPokemon = async () => {\n      try {\n        const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD format\n        const cacheKey = `dailyPokemon_${today}`;\n\n        // Check localStorage for today's Pokemon\n        const cachedPokemon = localStorage.getItem(cacheKey);\n        if (cachedPokemon) {\n          setPokemon(JSON.parse(cachedPokemon));\n          setLoading(false);\n          return;\n        }\n\n        // Fetch from server\n        const response = await fetch('/api/pokemon/daily');\n        if (!response.ok) {\n          throw new Error('Failed to fetch daily Pokemon');\n        }\n        const data = await response.json();\n\n        // Cache the result for today\n        localStorage.setItem(cacheKey, JSON.stringify(data));\n\n        // Clean up old cache entries (keep only today's)\n        Object.keys(localStorage).forEach(key => {\n          if (key.startsWith('dailyPokemon_') && key !== cacheKey) {\n            localStorage.removeItem(key);\n          }\n        });\n        setPokemon(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDailyPokemon();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-card loading\",\n      children: \"Loading today's Pokemon...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-card error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  if (!pokemon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-card\",\n      children: \"No Pokemon available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-card daily-pokemon\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDF1F Daily Pokemon \\uD83C\\uDF1F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/details/${pokemon.name}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ((_pokemon$sprites = pokemon.sprites) === null || _pokemon$sprites === void 0 ? void 0 : _pokemon$sprites.front_default) || pokemon.imageUrl,\n        alt: pokemon.name,\n        className: \"pokemon-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Height:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this), \" \", pokemon.height / 10, \" m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Weight:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }, this), \" \", pokemon.weight / 10, \" kg\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), pokemon.base_experience && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Base Experience:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 24\n        }, this), \" \", pokemon.base_experience]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-types\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Types:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-list\",\n        children: (pokemon.types || []).map((typeInfo, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `type-badge ${typeof typeInfo === 'string' ? typeInfo : typeInfo.type.name}`,\n          children: typeof typeInfo === 'string' ? typeInfo : typeInfo.type.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"daily-note\",\n      children: \"Click the image to see more details!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(DailyPokemonCard, \"UpmrPbcai4T+qSMLcaqhGKMPQuI=\");\n_c = DailyPokemonCard;\nexport default DailyPokemonCard;\nvar _c;\n$RefreshReg$(_c, \"DailyPokemonCard\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","DailyPokemonCard","_s","_pokemon$sprites","pokemon","setPokemon","loading","setLoading","error","setError","fetchDailyPokemon","today","Date","toISOString","split","cacheKey","cachedPokemon","localStorage","getItem","JSON","parse","response","fetch","ok","Error","data","json","setItem","stringify","Object","keys","forEach","key","startsWith","removeItem","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","charAt","toUpperCase","slice","to","src","sprites","front_default","imageUrl","alt","height","weight","base_experience","types","map","typeInfo","index","type","_c","$RefreshReg$"],"sources":["D:/pokemon-mern-app/client/src/components/DailyPokemonCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DailyPokemonCard = () => {\n    const [pokemon, setPokemon] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchDailyPokemon = async () => {\n            try {\n                const today = new Date().toISOString().split('T')[0]; // YYYY-MM-DD format\n                const cacheKey = `dailyPokemon_${today}`;\n\n                // Check localStorage for today's Pokemon\n                const cachedPokemon = localStorage.getItem(cacheKey);\n                if (cachedPokemon) {\n                    setPokemon(JSON.parse(cachedPokemon));\n                    setLoading(false);\n                    return;\n                }\n\n                // Fetch from server\n                const response = await fetch('/api/pokemon/daily');\n                if (!response.ok) {\n                    throw new Error('Failed to fetch daily Pokemon');\n                }\n                const data = await response.json();\n\n                // Cache the result for today\n                localStorage.setItem(cacheKey, JSON.stringify(data));\n\n                // Clean up old cache entries (keep only today's)\n                Object.keys(localStorage).forEach(key => {\n                    if (key.startsWith('dailyPokemon_') && key !== cacheKey) {\n                        localStorage.removeItem(key);\n                    }\n                });\n\n                setPokemon(data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchDailyPokemon();\n    }, []);\n\n    if (loading) {\n        return <div className=\"pokemon-card loading\">Loading today's Pokemon...</div>;\n    }\n\n    if (error) {\n        return <div className=\"pokemon-card error\">Error: {error}</div>;\n    }\n\n    if (!pokemon) {\n        return <div className=\"pokemon-card\">No Pokemon available</div>;\n    }\n\n    return (\n        <div className=\"pokemon-card daily-pokemon\">\n            <h2>ðŸŒŸ Daily Pokemon ðŸŒŸ</h2>\n            <h3>{pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)}</h3>\n            <Link to={`/details/${pokemon.name}`}>\n                <img\n                    src={pokemon.sprites?.front_default || pokemon.imageUrl}\n                    alt={pokemon.name}\n                    className=\"pokemon-image\"\n                />\n            </Link>\n            <div className=\"pokemon-info\">\n                <p><strong>Height:</strong> {pokemon.height / 10} m</p>\n                <p><strong>Weight:</strong> {pokemon.weight / 10} kg</p>\n                {pokemon.base_experience && (\n                    <p><strong>Base Experience:</strong> {pokemon.base_experience}</p>\n                )}\n            </div>\n            <div className=\"pokemon-types\">\n                <h4>Types:</h4>\n                <div className=\"type-list\">\n                    {(pokemon.types || []).map((typeInfo, index) => (\n                        <span\n                            key={index}\n                            className={`type-badge ${typeof typeInfo === 'string' ? typeInfo : typeInfo.type.name}`}\n                        >\n                            {typeof typeInfo === 'string' ? typeInfo : typeInfo.type.name}\n                        </span>\n                    ))}\n                </div>\n            </div>\n            <p className=\"daily-note\">Click the image to see more details!</p>\n        </div>\n    );\n};\n\nexport default DailyPokemonCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}